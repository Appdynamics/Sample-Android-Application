plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'adeum'
}

def appDynamicsPropertiesFile = rootProject.file("appdynamics.properties")
def appDynamicsProperties = new Properties()
appDynamicsProperties.load(new FileInputStream(appDynamicsPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.appdynamics.sampleandroidapplication"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

adeum{
    // The account information is also needed for on-prem deployments.
    account {
        name appDynamicsProperties['EUM_ACCOUNT_NAME']
        licenseKey appDynamicsProperties['EUM_LICENSE_KEY']
    }

    // Add this information if you want to modify upload behavior.
    proguardMappingFileUpload {
        failBuildOnUploadFailure true // If true, will fail build. Defaults to false.
        enabled true //enables automatic uploads.  Defaults to true
    }
}